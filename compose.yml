services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:password@api-gateway-db:5432/api_gateway_db
      - RABBITMQ_URL=amqp://rabbitmq
    command: ["npx", "nodemon", "dist/apps/api-gateway/main.js"]
    volumes:
      - ./node_modules:/usr/src/app/node_modules
      - ./apps/api-gateway:/usr/src/app/apps/api-gateway
    depends_on:
      - rabbitmq
      - api-gateway-db

  deliveries-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: deliveries-service
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:password@deliveries-service-db:5432/deliveries_service_db
      - RABBITMQ_URL=amqp://rabbitmq
    command: ["npx", "nodemon", "dist/apps/deliveries-service/main.js"]
    volumes:
      - ./node_modules:/usr/src/app/node_modules
      - ./apps/deliveries-service:/usr/src/app/apps/deliveries-service
    depends_on:
      - rabbitmq
      - deliveries-service-db

  listings-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: listings-service
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:password@listings-service-db:5432/listings_service_db
      - RABBITMQ_URL=amqp://rabbitmq
    command: ["npx", "nodemon", "dist/apps/listings-service/main.js"]
    volumes:
      - ./node_modules:/usr/src/app/node_modules
      - ./apps/listings-service:/usr/src/app/apps/listings-service
    depends_on:
      - rabbitmq
      - listings-service-db

  orders-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: orders-service
    ports:
      - "6000:6000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:password@orders-service-db:5432/orders_service_db
      - RABBITMQ_URL=amqp://rabbitmq
    command: ["npx", "nodemon", "dist/apps/orders-service/main.js"]
    volumes:
      - ./node_modules:/usr/src/app/node_modules
      - ./apps/orders-service:/usr/src/app/apps/orders-service
    depends_on:
      - rabbitmq
      - orders-service-db

  users-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: users-service
    ports:
      - "7000:7000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:password@users-service-db:5432/users_service_db
      - RABBITMQ_URL=amqp://rabbitmq
    command: ["npx", "nodemon", "dist/apps/users-service/main.js"]
    volumes:
      - ./node_modules:/usr/src/app/node_modules
      - ./apps/users-service:/usr/src/app/apps/users-service
    depends_on:
      - rabbitmq
      - users-service-db

  rabbitmq:
    image: rabbitmq:3-management

  api-gateway-db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: api_gateway_db
    volumes:
      - api-gateway-db-data:/var/lib/postgresql/data

  deliveries-service-db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: deliveries_service_db
    volumes:
      - deliveries-service-db-data:/var/lib/postgresql/data

  listings-service-db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: listings_service_db
    volumes:
      - listings-service-db-data:/var/lib/postgresql/data

  orders-service-db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orders_service_db
    volumes:
      - orders-service-db-data:/var/lib/postgresql/data

  users-service-db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users_service_db
    volumes:
      - users-service-db-data:/var/lib/postgresql/data

volumes:
  api-gateway-db-data:
  deliveries-service-db-data:
  listings-service-db-data:
  orders-service-db-data:
  users-service-db-data:
